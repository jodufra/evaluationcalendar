<?php// This file is part of a local Moodle plugin//// You can redistribute it and/or modify it under the terms of the  GNU General Public License // as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.// This plugin is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; // without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  // See the GNU General Public License for more details.//// You should have received a copy of the GNU General Public License along with Moodle. // If not, see <http://www.gnu.org/licenses/>./** * [File Documentation] * * @package local_pfc * @copyright 2016 Instituto Polit√©cnico de Leiria <http://www.ipleiria.pt> * @author Duarte Mateus <2120189@my.ipleiria.pt> * @author Joel Francisco <2121000@my.ipleiria.pt> * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later */defined('MOODLE_INTERNAL') || die();require_once($CFG->libdir . '/formslib.php');/** * * */class local_pfc_form extends moodleform {    protected function definition() {        $pfc_form = $this->_form;        // information        $pfc_form->addElement('static', '', '', get_string('info', 'local_pfc'));        // radio buttons        $requestTypes = array();        $requestTypes[] = $pfc_form->createElement('radio', 'requesttype', '', get_string('all','local_pfc'), 'all');        $requestTypes[] = $pfc_form->createElement('radio', 'requesttype', '', get_string('calendars','local_pfc'), 'calendars');        $requestTypes[] = $pfc_form->createElement('radio', 'requesttype', '', get_string('evaluations','local_pfc'), 'evaluations');        $requestTypes[] = $pfc_form->createElement('radio', 'requesttype', '', get_string('evaluationTypes','local_pfc'), 'evaluation_types');        $pfc_form->addGroup($requestTypes, 'requestTypes', '', array(' '), false);        $pfc_form->setDefault('requesttype', 'all');        // submit button        $pfc_form->addElement('submit', 'submitbutton', get_string('check', 'local_pfc'));    }}/** * * */function local_pfc_make_api_request_to_html($type = '') {    if($type == 'calendars'){        return local_pfc_get_calendars_to_hmtl();    }elseif($type == 'evaluations'){        return local_pfc_get_evaluations_to_hmtl();    }elseif($type == 'evaluation_types'){        return local_pfc_get_evaluation_types_to_hmtl();    }else{        $result = array();        $result[] = local_pfc_get_calendars_to_hmtl();        $result[] = local_pfc_get_evaluations_to_hmtl();        $result[] = local_pfc_get_evaluation_types_to_hmtl();        return implode('<br/>',$result);    }}/** * * */function local_pfc_get_calendars_to_hmtl() {    $result = get_string('calendars','local_pfc').':<br/>';    try{        $values = local_pfc_get_calendars();        $json = '[' . (count($values) ? implode(',', $values) : '') . ']';        $json = json_encode(json_decode($json), JSON_PRETTY_PRINT);        $result = $result . '<pre>' . $json . '</pre>';    }catch (\local_pfc\api_exception $e){        $result = $result.'<pre style="color:#e65100;">';        $result = $result.'<p style="color:#e65100;">'.$e->getOriginalMessage().'</p>';        if($e->getResponseObject()){            $result = $result.'<p>'.$e->getResponseObject()->getMessage().'</p>';        }        $result = $result.'</pre>';    }catch (moodle_exception $e){        $result = $result.'<pre style="color:#f00;">'.$e->getMessage().'</pre>';    }    return $result;}/** * * */function local_pfc_get_calendars() {    $api = new \local_pfc\api\calendar_api();    return $api->get_calendars();}/** * * */function local_pfc_get_evaluations_to_hmtl() {    $result = get_string('evaluations','local_pfc').':<br/>';    try{        $values = local_pfc_get_evaluations();        $json = '[' . (count($values) ? implode(',', $values) : '') . ']';        $json = json_encode(json_decode($json), JSON_PRETTY_PRINT);        $result = $result . '<pre>' . $json . '</pre>';    }catch (\local_pfc\api_exception $e){        $result = $result.'<pre style="color:#e65100;">';        $result = $result.'<p style="color:#e65100;">'.$e->getOriginalMessage().'</p>';        if($e->getResponseObject()){            $result = $result.'<p>'.$e->getResponseObject()->getMessage().'</p>';        }        $result = $result.'</pre>';    }catch (moodle_exception $e){        $result = $result.'<pre style="color:#f00;">'.$e->getMessage().'</pre>';    }    return $result;}/** * * */function local_pfc_get_evaluations() {    $api = new \local_pfc\api\evaluation_api();    return $api->get_evaluations();}/** * * */function local_pfc_get_evaluation_types_to_hmtl() {    $result = get_string('evaluationTypes','local_pfc').':<br/>';    try{        $values = local_pfc_get_evaluation_types();        $json = '[' . (count($values) ? implode(',', $values) : '') . ']';        $json = json_encode(json_decode($json), JSON_PRETTY_PRINT);        $result = $result . '<pre>' . $json . '</pre>';    }catch (\local_pfc\api_exception $e){        $result = $result.'<pre style="color:#e65100;">';        $result = $result.'<p style="color:#e65100;">'.$e->getOriginalMessage().'</p>';        if($e->getResponseObject()){            $result = $result.'<p>'.$e->getResponseObject()->getMessage().'</p>';        }        $result = $result.'</pre>';    }catch (moodle_exception $e){        $result = $result.'<pre style="color:#f00;">'.$e->getMessage().'</pre>';    }    return $result;}/** * * */function local_pfc_get_evaluation_types() {    $api = new \local_pfc\api\evaluation_type_api();    return $api->get_evaluation_types();}